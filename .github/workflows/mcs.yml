name: MCSManager Auto Setup & Backup

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *" # every ~6 hours

jobs:
  setup-and-backup:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install rclone
        run: |
          curl https://rclone.org/install.sh | sudo bash
          mkdir -p ~/.config/rclone
          rclone config create mega mega user "${{ secrets.MEGA_USER }}" pass "${{ secrets.MEGA_PASS }}"

      - name: Restore backup if exists
        id: restore_all
        run: |
          echo "üîÑ Checking for existing backup on Mega..."
          if rclone ls mega:mc-backups/latest-backup.tar.gz >/dev/null 2>&1; then
            echo "üì• Downloading backup..."
            rclone copy mega:mc-backups/latest-backup.tar.gz .
            echo "üìÇ Extracting..."
            sudo tar -xzf latest-backup.tar.gz -C /
            echo "restored=true" >> $GITHUB_OUTPUT
          else
            echo "‚ö†Ô∏è No backup found, proceeding with fresh install."
            echo "restored=false" >> $GITHUB_OUTPUT
          fi

      - name: Install dependencies
        if: steps.restore_all.outputs.restored == 'false'
        run: |
          sudo apt-get update
          sudo apt-get install -y curl wget git unzip tar gnupg lsb-release

      - name: Install MCSManager
        if: steps.restore_all.outputs.restored == 'false'
        run: |
          wget -qO- https://script.mcsmanager.com/setup.sh | sudo bash

      - name: Setup Cloudflare Tunnel
        run: |
          echo "‚òÅÔ∏è Installing cloudflared..."
          wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O /usr/local/bin/cloudflared
          chmod +x /usr/local/bin/cloudflared
          echo "‚òÅÔ∏è Starting tunnel with token..."
          nohup cloudflared tunnel --no-autoupdate run --token ${{ secrets.CLOUDFLARE_TUNNEL_TOKEN }} &

      - name: SSHX Session (21100s)
        run: |
          curl -sSf https://sshx.io/get | sh
          sshx &
          SSHX_PID=$!
          sleep 21300
          kill $SSHX_PID || true

      - name: Create Backup and Upload
        if: always()
        run: |
          echo "üì¶ Creating backup of /opt/mcsmanager..."
          sudo tar -czf latest-backup.tar.gz /opt/mcsmanager
          echo "‚¨ÜÔ∏è Uploading to Mega..."
          rclone copy latest-backup.tar.gz mega:mc-backups --progress
          echo "‚úÖ Backup complete."
